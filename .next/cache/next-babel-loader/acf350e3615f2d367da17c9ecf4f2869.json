{"ast":null,"code":"var _jsxFileName = \"/Users/seungmeelee/Documents/smlweb/pages/components/PImgTxt01.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // 1. Dependencies\n// 2. Components\n// 3. for style\n\nimport styled from 'styled-components'; // 4. Static Resources\n//——*——*——*——*——*——//\n\nconst PImgTxt01 = props => {\n  const {\n    title,\n    desc,\n    imgs\n  } = props;\n  var imgNum = imgs.length;\n  return __jsx(StyledPImgTxt01, {\n    imgNum: imgNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"imgWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, imgs.map(item => {\n    const {\n      imgLayout01\n    } = item;\n    return __jsx(\"div\", {\n      className: \"itemWrapper\",\n      key: item.imgSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: require(`../img/${item.imgSrc}.jpg`),\n      alt: item.desc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, item.desc));\n  })), __jsx(\"div\", {\n    className: \"textWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, desc)));\n};\n\n_c = PImgTxt01;\nconst StyledPImgTxt01 = styled.div`\n  width: 100vw;\n  height: 100vh;\n  padding: 5vw 3vw 3vw 3vw;\n  color: white;\n  margin-bottom: 15vh;\n  @media (max-width: 1024px) {\n    padding: 0;\n    height: max-content;\n  }\n  .imgWrapper {\n    margin-top: 2vh;\n    width: 94vw;\n    height: 70vh;\n    display: grid;\n    grid-template-columns: repeat(${props => props.imgNum}, 1fr);\n    @media (max-width: 1024px) {\n      width: 100vw;\n      height: calc(40vh * ${props => props.imgNum});\n      grid-template-rows: repeat(${props => props.imgNum}, 40vh);\n      grid-template-columns: none;\n      grid-gap: 5px;\n    }\n  }\n\n  .itemWrapper {\n    width: calc(94vw / ${props => props.imgNum} - 5px);\n    height: 70vh;\n    overflow: hidden;\n    position: relative;\n    @media (max-width: 1024px) {\n      width: 100vw;\n      height: 40vh;\n    }\n\n    img {\n      width: 100%;\n      height: 100% !important;\n      object-fit: cover;\n    }\n\n    p {\n      position: absolute;\n      top: 1vw;\n      left: 1vw;\n      z-index: 10;\n      font-weight: 300;\n      font-size: 1em;\n      font-style: italic;\n      @media (max-width: 1024px) {\n        top: 3vw;\n        left: 3vw;\n        font-size: 0.8em;\n      }\n    }\n  }\n  .textWrapper {\n    width: 94vw;\n    margin-top: 3vh;\n    display: grid;\n    grid-template-columns: 62.66vw 31.33vw;\n    @media (max-width: 1024px) {\n      display: block;\n      margin-left: 5vw;\n      width: 90vw;\n      margin-top: 5vh;\n    }\n    h1 {\n      font-size: 2.5em;\n      font-weight: 600;\n      /* @media (max-width: 1024px) {\n        font-size: 1em;\n      } */\n    }\n    p {\n      font-size: 0.8em;\n      font-weight: 300;\n      margin-top: 0.5em;\n      @media (max-width: 1024px) {\n        width: 80%;\n      }\n    }\n  }\n`;\n_c2 = StyledPImgTxt01;\nexport default PImgTxt01;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PImgTxt01\");\n$RefreshReg$(_c2, \"StyledPImgTxt01\");","map":{"version":3,"sources":["/Users/seungmeelee/Documents/smlweb/pages/components/PImgTxt01.js"],"names":["React","BrowserRouter","Router","Route","styled","PImgTxt01","props","title","desc","imgs","imgNum","length","map","item","imgLayout01","imgSrc","require","StyledPImgTxt01","div"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AAEA;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAAwBH,KAA9B;AACA,MAAII,MAAM,GAAGD,IAAI,CAACE,MAAlB;AACA,SACE,MAAC,eAAD;AAAiB,IAAA,MAAM,EAAED,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,IAAxB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEA,IAAI,CAACE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEC,OAAO,CAAE,UAASH,IAAI,CAACE,MAAO,MAAvB,CAAjB;AAAgD,MAAA,GAAG,EAAEF,IAAI,CAACL,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIK,IAAI,CAACL,IAAT,CAFF,CADF;AAMD,GARA,CADH,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFF,CAZF,CADF;AAmBD,CAtBD;;KAAMH,S;AAwBN,MAAMY,eAAe,GAAGb,MAAM,CAACc,GAAI;;;;;;;;;;;;;;;oCAeCZ,KAAK,IAAIA,KAAK,CAACI,MAAO;;;4BAG9BJ,KAAK,IAAIA,KAAK,CAACI,MAAO;mCACfJ,KAAK,IAAIA,KAAK,CAACI,MAAO;;;;;;;yBAOhCJ,KAAK,IAAIA,KAAK,CAACI,MAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA1B/C;MAAMO,e;AAqFN,eAAeZ,SAAf","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// 1. Dependencies\n// 2. Components\n// 3. for style\nimport styled from 'styled-components'\n\n// 4. Static Resources\n\n//——*——*——*——*——*——//\n\nconst PImgTxt01 = props => {\n  const { title, desc, imgs } = props\n  var imgNum = imgs.length\n  return (\n    <StyledPImgTxt01 imgNum={imgNum}>\n      <div className=\"imgWrapper\">\n        {imgs.map(item => {\n          const { imgLayout01 } = item\n          return (\n            <div className=\"itemWrapper\" key={item.imgSrc}>\n              <img src={require(`../img/${item.imgSrc}.jpg`)} alt={item.desc} />\n              <p>{item.desc}</p>\n            </div>\n          )\n        })}\n      </div>\n      <div className=\"textWrapper\">\n        <h1>{title}</h1>\n        <p>{desc}</p>\n      </div>\n    </StyledPImgTxt01>\n  )\n}\n\nconst StyledPImgTxt01 = styled.div`\n  width: 100vw;\n  height: 100vh;\n  padding: 5vw 3vw 3vw 3vw;\n  color: white;\n  margin-bottom: 15vh;\n  @media (max-width: 1024px) {\n    padding: 0;\n    height: max-content;\n  }\n  .imgWrapper {\n    margin-top: 2vh;\n    width: 94vw;\n    height: 70vh;\n    display: grid;\n    grid-template-columns: repeat(${props => props.imgNum}, 1fr);\n    @media (max-width: 1024px) {\n      width: 100vw;\n      height: calc(40vh * ${props => props.imgNum});\n      grid-template-rows: repeat(${props => props.imgNum}, 40vh);\n      grid-template-columns: none;\n      grid-gap: 5px;\n    }\n  }\n\n  .itemWrapper {\n    width: calc(94vw / ${props => props.imgNum} - 5px);\n    height: 70vh;\n    overflow: hidden;\n    position: relative;\n    @media (max-width: 1024px) {\n      width: 100vw;\n      height: 40vh;\n    }\n\n    img {\n      width: 100%;\n      height: 100% !important;\n      object-fit: cover;\n    }\n\n    p {\n      position: absolute;\n      top: 1vw;\n      left: 1vw;\n      z-index: 10;\n      font-weight: 300;\n      font-size: 1em;\n      font-style: italic;\n      @media (max-width: 1024px) {\n        top: 3vw;\n        left: 3vw;\n        font-size: 0.8em;\n      }\n    }\n  }\n  .textWrapper {\n    width: 94vw;\n    margin-top: 3vh;\n    display: grid;\n    grid-template-columns: 62.66vw 31.33vw;\n    @media (max-width: 1024px) {\n      display: block;\n      margin-left: 5vw;\n      width: 90vw;\n      margin-top: 5vh;\n    }\n    h1 {\n      font-size: 2.5em;\n      font-weight: 600;\n      /* @media (max-width: 1024px) {\n        font-size: 1em;\n      } */\n    }\n    p {\n      font-size: 0.8em;\n      font-weight: 300;\n      margin-top: 0.5em;\n      @media (max-width: 1024px) {\n        width: 80%;\n      }\n    }\n  }\n`\n\nexport default PImgTxt01\n"]},"metadata":{},"sourceType":"module"}