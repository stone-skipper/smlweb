{"ast":null,"code":"var _jsxFileName = \"/Users/seungmeelee/Documents/smlweb/pages/components/PCover.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // 1. Dependencies\n// 2. Components\n// 3. for style\n\nimport styled from 'styled-components'; // 4. Static Resources\n//——*——*——*——*——*——//\n\nconst PCover = props => {\n  const {\n    title,\n    desc,\n    type,\n    year,\n    detail,\n    imgSrc,\n    icons,\n    bkwrapper\n  } = props;\n  var imgNum = icons.length;\n  return __jsx(StyledPCover, {\n    imgSrc: imgSrc,\n    imgNum: imgNum,\n    bkwrapper: bkwrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"imgWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: require(`../img/${imgSrc}.jpg`),\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"blackWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"titleWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, desc)), __jsx(\"div\", {\n    className: \"descWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, type), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"\\xB7\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, year), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"\\xB7\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, detail)), __jsx(\"div\", {\n    className: \"iconWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, icons.map(item => {\n    const {\n      projectIcons\n    } = item;\n\n    if (icons === 'undefined') {\n      return null;\n    }\n\n    return __jsx(\"div\", {\n      className: \"icon\",\n      key: item.imgSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: require(`../img/${item.imgSrc}.png`),\n      alt: item.imgSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nconst StyledPCover = styled.div`\n  /* scroll-snap-align: start; */\n\n  color: white;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  position: relative;\n  margin-bottom: 5px;\n  .blackWrapper {\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    background-color: black;\n    opacity: ${props => props.bkwrapper ? 0.7 : 0};\n    z-index: 9;\n  }\n  .imgWrapper {\n    width: 100vw;\n    height: 100vh;\n  }\n  img {\n    width: 100%;\n    height: 100% !important;\n    object-fit: cover;\n\n    /* margin-top: -30vh; */\n    @media (max-width: 1024px) {\n      width: 100%;\n      height: 100% !important;\n      object-fit: cover;\n      margin-top: 0;\n    }\n  }\n\n  .titleWrapper {\n    position: absolute;\n    z-index: 10;\n    top: 3vw;\n    left: 3vw;\n    width: 50vw;\n    @media (max-width: 1024px) {\n      top: 5vw;\n      left: 5vw;\n    }\n    h1 {\n      font-size: 4em;\n      font-weight: 600;\n      @media (max-width: 1024px) {\n        font-size: 3em;\n      }\n    }\n    h2 {\n      font-size: 4em;\n      font-weight: 100;\n      line-height: 1.5;\n      @media (max-width: 1024px) {\n        font-size: 3em;\n      }\n    }\n    @media (max-width: 1024px) {\n      width: 80vw;\n    }\n  }\n\n  .descWrapper {\n    position: absolute;\n    z-index: 10;\n    bottom: 3vw;\n    left: 3vw;\n    width: 50vw;\n    padding-top: 2em;\n    @media (max-width: 1024px) {\n      bottom: 3vw;\n      left: 5vw;\n    }\n    p {\n      font-size: 0.9em;\n      text-align: left;\n      line-height: 0.8;\n      float: left;\n      margin-right: 1em;\n      @media (max-width: 1024px) {\n        font-size: 0.8em;\n      }\n    }\n    @media (max-width: 1024px) {\n      width: 100vw;\n    }\n  }\n  .iconWrapper {\n    position: absolute;\n    right: 3vw;\n    bottom: 3vw;\n    z-index: 11;\n    height: 5vw;\n    max-width: 31.33vw;\n    display: grid;\n    align-items: center;\n    grid-column-gap: 3vw;\n    grid-template-columns: repeat(${props => props.imgNum}, 1fr);\n    @media (max-width: 1024px) {\n      bottom: 18vw;\n      left: 5vw;\n    }\n    .icon {\n      height: 3vw;\n    }\n    img {\n      max-height: 4vw;\n      min-height: 3vw;\n      max-width: 7vw;\n      padding: 0;\n      object-fit: contain;\n      transform: translateY(50%);\n      @media (max-width: 1024px) {\n        max-height: 20vw;\n        max-width: 10vw;\n        min-height: 15vw;\n        transform: translateY(-50%);\n      }\n    }\n  }\n`;\nexport default PCover;","map":{"version":3,"sources":["/Users/seungmeelee/Documents/smlweb/pages/components/PCover.js"],"names":["React","BrowserRouter","Router","Route","styled","PCover","props","title","desc","type","year","detail","imgSrc","icons","bkwrapper","imgNum","length","require","map","item","projectIcons","StyledPCover","div"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// 1. Dependencies\n// 2. Components\n// 3. for style\nimport styled from 'styled-components'\n\n// 4. Static Resources\n\n//——*——*——*——*——*——//\n\nconst PCover = props => {\n  const { title, desc, type, year, detail, imgSrc, icons, bkwrapper } = props\n\n  var imgNum = icons.length\n  return (\n    <StyledPCover imgSrc={imgSrc} imgNum={imgNum} bkwrapper={bkwrapper}>\n      <div className=\"imgWrapper\">\n        <img src={require(`../img/${imgSrc}.jpg`)} alt={title} />\n      </div>\n      <div className=\"blackWrapper\" />\n      <div className=\"titleWrapper\">\n        <h1>{title}</h1>\n        <h2>{desc}</h2>\n      </div>\n      <div className=\"descWrapper\">\n        <p>{type}</p>\n        <p>·</p>\n        <p>{year}</p>\n        <p>·</p>\n        <p>{detail}</p>\n      </div>\n\n      <div className=\"iconWrapper\">\n        {icons.map(item => {\n          const { projectIcons } = item\n          if (icons === 'undefined') {\n            return null\n          }\n          return (\n            <div className=\"icon\" key={item.imgSrc}>\n              <img\n                src={require(`../img/${item.imgSrc}.png`)}\n                alt={item.imgSrc}\n              />\n            </div>\n          )\n        })}\n      </div>\n    </StyledPCover>\n  )\n}\n\nconst StyledPCover = styled.div`\n  /* scroll-snap-align: start; */\n\n  color: white;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  position: relative;\n  margin-bottom: 5px;\n  .blackWrapper {\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    background-color: black;\n    opacity: ${props => (props.bkwrapper ? 0.7 : 0)};\n    z-index: 9;\n  }\n  .imgWrapper {\n    width: 100vw;\n    height: 100vh;\n  }\n  img {\n    width: 100%;\n    height: 100% !important;\n    object-fit: cover;\n\n    /* margin-top: -30vh; */\n    @media (max-width: 1024px) {\n      width: 100%;\n      height: 100% !important;\n      object-fit: cover;\n      margin-top: 0;\n    }\n  }\n\n  .titleWrapper {\n    position: absolute;\n    z-index: 10;\n    top: 3vw;\n    left: 3vw;\n    width: 50vw;\n    @media (max-width: 1024px) {\n      top: 5vw;\n      left: 5vw;\n    }\n    h1 {\n      font-size: 4em;\n      font-weight: 600;\n      @media (max-width: 1024px) {\n        font-size: 3em;\n      }\n    }\n    h2 {\n      font-size: 4em;\n      font-weight: 100;\n      line-height: 1.5;\n      @media (max-width: 1024px) {\n        font-size: 3em;\n      }\n    }\n    @media (max-width: 1024px) {\n      width: 80vw;\n    }\n  }\n\n  .descWrapper {\n    position: absolute;\n    z-index: 10;\n    bottom: 3vw;\n    left: 3vw;\n    width: 50vw;\n    padding-top: 2em;\n    @media (max-width: 1024px) {\n      bottom: 3vw;\n      left: 5vw;\n    }\n    p {\n      font-size: 0.9em;\n      text-align: left;\n      line-height: 0.8;\n      float: left;\n      margin-right: 1em;\n      @media (max-width: 1024px) {\n        font-size: 0.8em;\n      }\n    }\n    @media (max-width: 1024px) {\n      width: 100vw;\n    }\n  }\n  .iconWrapper {\n    position: absolute;\n    right: 3vw;\n    bottom: 3vw;\n    z-index: 11;\n    height: 5vw;\n    max-width: 31.33vw;\n    display: grid;\n    align-items: center;\n    grid-column-gap: 3vw;\n    grid-template-columns: repeat(${props => props.imgNum}, 1fr);\n    @media (max-width: 1024px) {\n      bottom: 18vw;\n      left: 5vw;\n    }\n    .icon {\n      height: 3vw;\n    }\n    img {\n      max-height: 4vw;\n      min-height: 3vw;\n      max-width: 7vw;\n      padding: 0;\n      object-fit: contain;\n      transform: translateY(50%);\n      @media (max-width: 1024px) {\n        max-height: 20vw;\n        max-width: 10vw;\n        min-height: 15vw;\n        transform: translateY(-50%);\n      }\n    }\n  }\n`\n\nexport default PCover\n"]},"metadata":{},"sourceType":"module"}