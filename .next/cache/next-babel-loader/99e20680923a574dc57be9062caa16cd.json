{"ast":null,"code":"var _jsxFileName = \"/Users/seungmeelee/Documents/smlweb/pages/components/PConcept.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // 1. Dependencies\n// 2. Components\n// 3. for style\n\nimport styled from 'styled-components'; // 4. Static Resources\n//——*——*——*——*——*——//\n\nconst PConcept = props => {\n  const {\n    desc,\n    concept,\n    imgSrc,\n    txtColor,\n    user,\n    bkWrapper\n  } = props;\n  var textColor = txtColor;\n  return __jsx(StyledPConcept, {\n    textColor: textColor,\n    bkWrapper: bkWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: require(`../img/${imgSrc}.jpg`),\n    alt: desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"bkWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"concept\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, concept), __jsx(\"div\", {\n    className: \"for\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"for \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, user))), __jsx(\"p\", {\n    className: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, desc));\n};\n\n_c = PConcept;\nconst StyledPConcept = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  margin-bottom: 15vh;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: 100% !important;\n    z-index: 0;\n    object-fit: cover;\n  }\n  .bkWrapper {\n    width: 100vw;\n    height: 100vh;\n    background-color: black;\n    opacity: ${props => props.bkWrapper};\n    position: absolute;\n    top: 0;\n  }\n  .wrapper {\n    z-index: 10;\n    margin: 0;\n    position: absolute;\n    left: 3vw;\n    width: 100%;\n    color: ${props => props.textColor};\n    font-size: 3em;\n    top: 50%;\n    -ms-transform: translateY(-50%);\n    -webkit-transform: translateY(-50%);\n    transform: translateY(-50%);\n    font-family: 'Titillium Web';\n    display: inline-block;\n    font-style: italic;\n    font-weight: 300;\n    line-height: 3;\n    .concept {\n      h1 {\n        margin: 0;\n        padding: 0;\n        font-weight: 300;\n        font-size: 1em;\n      }\n    }\n    .for {\n      span {\n        padding-bottom: 1vh;\n        border-bottom: 2px solid ${props => props.textColor};\n      }\n    }\n    @media (max-width: 1024px) {\n      left: 5vw;\n      top: 5vw;\n      -ms-transform: translateY(0%);\n      -webkit-transform: translateY(0%);\n      transform: translateY(0%);\n    }\n  }\n  .concept {\n    span {\n      font-weight: 600;\n    }\n  }\n\n  .desc {\n    z-index: 10;\n    width: 28vw;\n    margin-left: 62.66vw;\n    position: absolute;\n    color: ${props => props.textColor};\n    top: 75%;\n    left: 3vw;\n    font-size: 0.8em;\n    @media (max-width: 1024px) {\n      left: 5vw;\n      margin-left: 0;\n      width: 80%;\n    }\n  }\n`;\n_c2 = StyledPConcept;\nStyledPConcept.defaultProps = {\n  bkWrapper: 0\n};\nexport default PConcept;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PConcept\");\n$RefreshReg$(_c2, \"StyledPConcept\");","map":{"version":3,"sources":["/Users/seungmeelee/Documents/smlweb/pages/components/PConcept.js"],"names":["React","BrowserRouter","Router","Route","styled","PConcept","props","desc","concept","imgSrc","txtColor","user","bkWrapper","textColor","require","StyledPConcept","div","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AAEA;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,IAAnC;AAAyCC,IAAAA;AAAzC,MAAuDN,KAA7D;AACA,MAAIO,SAAS,GAAGH,QAAhB;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEG,SAA3B;AAAsC,IAAA,SAAS,EAAED,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEE,OAAO,CAAE,UAASL,MAAO,MAAlB,CAAjB;AAA2C,IAAA,GAAG,EAAEF,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,OAA1B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,IAAP,CADN,CAFF,CAHF,EASE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBJ,IAArB,CATF,CADF;AAaD,CAjBD;;KAAMF,Q;AAmBN,MAAMU,cAAc,GAAGX,MAAM,CAACY,GAAI;;;;;;;;;;;;;;;;;eAiBnBV,KAAK,IAAIA,KAAK,CAACM,SAAU;;;;;;;;;;aAU3BN,KAAK,IAAIA,KAAK,CAACO,SAAU;;;;;;;;;;;;;;;;;;;;;;mCAsBHP,KAAK,IAAIA,KAAK,CAACO,SAAU;;;;;;;;;;;;;;;;;;;;;;aAsB/CP,KAAK,IAAIA,KAAK,CAACO,SAAU;;;;;;;;;;CAvEtC;MAAME,c;AAmFNA,cAAc,CAACE,YAAf,GAA8B;AAC5BL,EAAAA,SAAS,EAAE;AADiB,CAA9B;AAIA,eAAeP,QAAf","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// 1. Dependencies\n// 2. Components\n// 3. for style\nimport styled from 'styled-components'\n\n// 4. Static Resources\n\n//——*——*——*——*——*——//\n\nconst PConcept = props => {\n  const { desc, concept, imgSrc, txtColor, user, bkWrapper } = props\n  var textColor = txtColor\n\n  return (\n    <StyledPConcept textColor={textColor} bkWrapper={bkWrapper}>\n      <img src={require(`../img/${imgSrc}.jpg`)} alt={desc} />\n      <div className=\"bkWrapper\" />\n      <div className=\"wrapper\">\n        <div className=\"concept\">{concept}</div>\n        <div className=\"for\">\n          for <span>{user}</span>\n        </div>\n      </div>\n      <p className=\"desc\">{desc}</p>\n    </StyledPConcept>\n  )\n}\n\nconst StyledPConcept = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  margin-bottom: 15vh;\n  position: relative;\n\n  img {\n    width: 100%;\n    height: 100% !important;\n    z-index: 0;\n    object-fit: cover;\n  }\n  .bkWrapper {\n    width: 100vw;\n    height: 100vh;\n    background-color: black;\n    opacity: ${props => props.bkWrapper};\n    position: absolute;\n    top: 0;\n  }\n  .wrapper {\n    z-index: 10;\n    margin: 0;\n    position: absolute;\n    left: 3vw;\n    width: 100%;\n    color: ${props => props.textColor};\n    font-size: 3em;\n    top: 50%;\n    -ms-transform: translateY(-50%);\n    -webkit-transform: translateY(-50%);\n    transform: translateY(-50%);\n    font-family: 'Titillium Web';\n    display: inline-block;\n    font-style: italic;\n    font-weight: 300;\n    line-height: 3;\n    .concept {\n      h1 {\n        margin: 0;\n        padding: 0;\n        font-weight: 300;\n        font-size: 1em;\n      }\n    }\n    .for {\n      span {\n        padding-bottom: 1vh;\n        border-bottom: 2px solid ${props => props.textColor};\n      }\n    }\n    @media (max-width: 1024px) {\n      left: 5vw;\n      top: 5vw;\n      -ms-transform: translateY(0%);\n      -webkit-transform: translateY(0%);\n      transform: translateY(0%);\n    }\n  }\n  .concept {\n    span {\n      font-weight: 600;\n    }\n  }\n\n  .desc {\n    z-index: 10;\n    width: 28vw;\n    margin-left: 62.66vw;\n    position: absolute;\n    color: ${props => props.textColor};\n    top: 75%;\n    left: 3vw;\n    font-size: 0.8em;\n    @media (max-width: 1024px) {\n      left: 5vw;\n      margin-left: 0;\n      width: 80%;\n    }\n  }\n`\n\nStyledPConcept.defaultProps = {\n  bkWrapper: 0\n}\n\nexport default PConcept\n"]},"metadata":{},"sourceType":"module"}